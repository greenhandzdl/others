@startuml
actor User
participant main as Main
participant LibraryCache as Cache
participant dlfcn as DynamicLoader
participant libmylib.so as LibMyLib

User -> Main : Start Program
Main -> Cache : load("./libmylib.so")
Cache -> DynamicLoader : dlopen("./libmylib.so")
DynamicLoader --> Cache : returns shared_ptr<void>
Cache --> Main : returns shared_ptr<void>

Main -> Cache : get_function<HelloFunc>("hello")
Cache -> LibMyLib : dlsym("hello")
LibMyLib --> Cache : returns function pointer
Cache --> Main : returns HelloFunc

Main -> HelloFunc : hello()
HelloFunc --> Main : prints message

Main -> Cache : load("./libmylib.so") (cache hit)
Cache --> Main : returns cached shared_ptr<void>

Main -> Cache : get_function<AddFunc>("add")
Cache -> LibMyLib : dlsym("add")
LibMyLib --> Cache : returns function pointer
Cache --> Main : returns AddFunc

Main -> AddFunc : add(3, 5)
AddFunc --> Main : returns 8

Main -> Cache : load("./libmylib.so") (temporary load)
Cache -> DynamicLoader : dlopen("./libmylib.so")
DynamicLoader --> Cache : returns shared_ptr<void>
Cache --> Main : returns shared_ptr<void>

Main -> Cache : load("./libmylib.so") (still valid)
Cache --> Main : returns cached shared_ptr<void>

Main --> User : End Program
@enduml